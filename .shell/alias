############################################################
# Pakage Management
############################################################

# Gentoo
alias em='sudo emerge'

# Arch
function sp {
  if [ -f '/usr/bin/yaourt' ];then
    sudo yaourt $@
  elif [ -f '/usr/bin/pacman' ]; then
    sudo pacman $@
  elif [ -f '/usr/bin/apt-get' ]; then
    if [ "$1" = "-Ss" ]; then
      if [ -f '/usr/bin/aptitude' ]; then
        aptitude search $(echo $@ | sed 's/-Ss\?\s*//')
      else
        apt-cache search $(echo $@ | sed 's/-Ss\?\s*//')
      fi
    elif [ "$1" = "-Qs" ]; then
      apt-cache search -installed $(echo $@ | sed 's/-Qs\?\s*//')
    elif [ "$1" = "-S" ]; then
      sudo apt-get install $(echo $@ | sed 's/-S\?\s*//')
    elif [ "$1" = "-Suy" ]; then
      sudo apt-get update
      sudo apt-get dist-upgrade
    elif [ "$1" = "-Su" ]; then
      sudo aptitude update
    elif [ "$1" = "-Rsn" ]; then
      sudo apt-get remove $(echo $@ | sed 's/-Rsn\?\s*//')
    elif [ "$1" = "-Qc" ]; then
      apt-get changelog $(echo $@ | sed 's/-Qc\?\s*//')
    elif [ "$1" = "-Qi" ]; then
      apt-cache show $(echo $@ | sed 's/-Qi\?\s*//')
    elif [ "$1" = "-Ql" ]; then
      dpkg -L $(echo $@ | sed 's/-Ql\?\s*//')
    elif [ "$1" = "-Qo" ]; then
      dpkg -S $(echo $@ | sed 's/-Qo\?\s*//')
    elif [ "$1" = "-Qp" ]; then
      keyword=$(echo $@ | sed 's/-Qp\?\s*//')
      apt-cache pkgnames | sort | xargs apt-cache policy | awk '/^[^ ]/ { split($1, a, ":"); pkg = a[1]; installed="[i] ";}
         /Installed/ {version=$2;if (match(version,/none/)){installed="[n] ";version=""}}
         /Candidate/ {if (version=="") { version=$2 } else if (version!=$2) {version="* "$2} }
         /Packages/ {printf("%s%-40s %-50s %s   %s\n", installed, pkg, $2, $3, version)}' |grep $keyword
    else
      if [ -f '/usr/bin/aptitude' ]; then
        sudo aptitude $@
      else
        sudo apt-get $@
      fi
    fi
  fi
}

############################################################
# System
############################################################
function t {
  if [ -f '~/.scripts/tmux_goto' ];then
    ~/.scripts/tmux_goto $@
  else
    tmux_goto $*
  fi
}

alias tt='tmuxinator'
alias z='zeus'

# Basic directory operations
function . {
  if [ -z "$*" ]; then
    pwd
  else
    source $*
  fi
}

alias ...='cd ../..'
alias ....='cd ../../..'
alias -- -='cd -'

function rm {
  echo $@ | grep -P '\W?-rf\b'
  if [[ $? != 0 ]];then
    mv -f $* /tmp
  else
    arg=$(echo $@ | sed 's/-rf\?\s*//')
    sudo rm -rfi $arg
  fi
}

function pdf {
  if [ -f '/usr/bin/evince' ];then
    evince $@
  fi
}

uname | grep 'Darwin' > /dev/null
if [[ $? -eq 0 ]] ; then
  alias ls='ls -G'
else
  alias ls='ls -CF --color=auto'
fi

alias lsl='ls -l'
alias lsa='ls -A'
# lists files in reverse time order
alias lsnew='ls -rtl'
# lists files in size order with the biggest at the end
alias lssize='ls -rlS'
# alias lsnew=" ls -al --time-style=+%D | grep `date +%D` "

# find the directory with the biggest file in it
alias dud='du -scm *|sort -n'
alias df='df -Tm'

alias x='exit'

# GEM
alias sgi='sudo gem install'
alias sgu='sudo gem uninstall'
alias sgl='sudo gem list'

# VIM
function sv {
  if [ -n "$*" ]; then
    sudo vim $*
  else
    sudo vim
  fi
}

function v {
  if [ -n "$*" ]; then
    vim $*
  else
    vim
  fi
}

function vim {
  if [ -f '/usr/local/bin/vim' ]; then
    /usr/local/bin/vim $(echo $* | sed "s/:/ +/g")
  elif [ -f '/usr/local/bin/nvim' ];then
    /usr/local/bin/nvim $(echo $* | sed "s/:/ +/g")
  else
    /usr/bin/vim $(echo $* | sed "s/:/ +/g")
  fi
}

function e {
  if [ -n "$*" ]; then
    emacsclient -a "" -t $*
  else
    emacsclient -a "" -t
  fi
}

# Touchpad
alias tpc='synclient touchpadoff=1'
alias tpo='synclient touchpadoff=0'

# Jobs fg bg
alias j='jobs'
alias f='fg'
alias b='bg'

for ((i=1;i<5;i++)) do
  eval alias f$i=\'fg %$i\';
  eval alias b$i=\'bg %$i\';
done

############################################################
# Ruby/Rails
############################################################
function ss {
  if [ -f 'script/server' ];then
    script/server $@
  else
    bundle exec rails server $@
  fi
}

function sg {
  if [ -f 'script/generate' ];then
    script/generate $@
  else
    bundle exec rails generate $@
  fi
}

function sc {
  if [ -f 'script/console' ];then
    script/console $@
  else
    bundle exec rails console $@
  fi
}

function sd {
  if [ -f 'script/dbconsole' ];then
    script/dbconsole $@
  else
    bundle exec rails dbconsole $@
  fi
}

# Autotest
function as {
  if [ -f 'script/autospec' ];then
    autospec $@
    # AUTOFEATURE=true autospec $@
  else
    autotest $@
    # AUTOFEATURE=true autotest $@
  fi
}

alias rdm='rake db:migrate'
alias rdc='rake db:create'

############################################################
# Git/SVN
############################################################

alias gb='git branch -a -v'
alias gi='git ci'
alias gmt='git mergetool'
alias gp='git push origin master'
alias gsb='git show-branch'
alias gdc='git diff --cached'
alias gcount='git shortlog -sn'

function gci {
  if [ -d '.hg' ]; then
    hg commit -m $*
  else
    git commit -am $*
  fi
}

function gs {
  if [ -d '.svn' ];then
    svn status $*
  elif [ -d '.hg' ]; then
    hg status $*
  else
    git status $*
  fi
}

function gl {
  if [ -d '.svn' ];then
    svn log $*
  elif [ -d '.hg' ]; then
    hg log $* | less
  else
    git log $*
  fi
}

function gd {
  if [ -d '.svn' ];then
    svn diff $*
  elif [ -d '.hg' ]; then
    hg diff $*
  else
    git diff $*
  fi
}

# gc      => git checkout master
# gc bugs => git checkout bugs
alias gC='git checkout master'
function gc {
if [ $(echo "$*" | grep -E "^[0-9]+$") ]; then
  git checkout @{-$*}
else
  if [ -z "$*" ]; then
    git checkout @{-1}
  else
    git checkout $*
  fi
fi
}

# create patch
function gfp {
  if [ -z "$*" ]; then
    git format-patch origin/master
  else
    git format-patch $*
  fi
}
# apply patch
function gam {
  if [ -z "$*" ]; then
    git am *patch
  else
    git am $*
  fi
}

function cvsdiff () {
  if [ "$1" != "" ]; then
    cvs diff $@ | colordiff | less;
  else
    cvs diff | colordiff | less;
  fi
}

# color diffs for SVN
function svndiff () {
  if [ "$1" != "" ]; then
    svn diff $@ | colordiff | less;
  else
    svn diff | colordiff | less;
  fi
}

function tmux_upenv () {
  echo -n "Updating to latest tmux environment...";
  export IFS=",";
  for line in $(tmux showenv -t $(tmux display -p "#S") | tr "\n" ",");
  do
    if [[ $line == -* ]]; then
      unset $(echo $line | cut -c2-);
    else
      export $line;
    fi;
  done;
  unset IFS;
  echo "Done"
}
