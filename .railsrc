# vim: ft=ruby

require 'logger'
require 'pp'
# require 'activesupport'
Object.const_set(:RAILS_DEFAULT_LOGGER, Logger.new(STDOUT))

def sql(query)
  pp(ActiveRecord::Base.connection.select_all(query))
end

def define_model_find_shortcuts
  model_files = Dir.glob("app/models/**/*.rb" )
  table_names = model_files.map { |f| File.basename(f).split('.' )[0..-2].join }
  table_names.each do |table_name|
    Object.instance_eval do
      define_method(table_name) do |*args|
        table_name.camelize.constantize.send(:find, *args)
      end
    end
  end
end
IRB.conf[:IRB_RC] = Proc.new { define_model_find_shortcuts }

rails_root = File.basename(Dir.pwd)
IRB.conf[:PROMPT] ||= {}
IRB.conf[:PROMPT][:RAILS] = {
    :PROMPT_I => "#{rails_root}> ",
    :PROMPT_S => "#{rails_root}* ",
    :PROMPT_C => "#{rails_root}? ",
    :RETURN   => "=> %s\n" 
}
IRB.conf[:PROMPT_MODE] = :RAILS

def change_log(stream)
  ActiveRecord::Base.logger = Logger.new(stream)
  ActiveRecord::Base.clear_active_connections!
end
 
def show_log
  change_log(STDOUT)
end
 
def hide_log
  change_log(nil)
end
