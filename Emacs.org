* Move cursor
  C-a/C-e -> beginning/end of current line
  M-a/M-e -> beginning/end of current paragraph
  C-f/C-b -> next/backward char
  M-f/M-b -> next/backward word
  C-n/C-p -> next/previous line
  C-v/M-v -> scroll up/down
  C-l     -> re center

  M-9 M-9 M-9 C-f -> Move forward 999 char

* Mark
  M-@ -> Mark word
  M-h -> Mark paragraph
  C-x h -> Mark whole buffer
  C-u C-space -> last mark place -> then use C-space
  C-space C-space -> set mark
  C-x C-x -> select to last mark place

* Kill text
  C-d -> kill next char
  Backspace -> kill backward char

  M-Delete -> backward kill word
  M-d	-> kill word

  C-k -> kill line to end
  C-0 C-k -> kill line to beginning
  Super-k -> kill current line

  M-k -> kill paragraph to end
  C-x Delete -> backward kill paragraph

  M-0 M-k -> kill paragraph to beginning
  M-z -> zap to char
  M-9 M-z -> ignore the first 9 chars when zap

  C-u -> universal-argument -> default is 4

* Register
  + C-x r space (key) -> add to register (key)
  + C-x r j (key) -> jump to register (key)
  + C-x r s (key) -> save text to register (key)
  + C-x r i (key) -> read text from register (key)
** Bookmarks
 + C-x r m Add current buffer to bookmarks.
 + C-x r b Open a buffer from bookmarks.
 + C-x r l List bookmarks.
 + M-x bookmark-delete or in list page d (delete) -> x (execute)
 + M-x bookmark-save

* Jump
  C-x C-SPACE - Jump between marks
  C-u C-SPANCE - Jump between local marks
  C-x r SPACE [a-z] -> mark a point in the document
  C-x r j [a-z] -> jump to the point in the document

** Jump Window: (winner mode)
C-c <left> winner-undo
C-c <right> redo
Super + up/down/left/right -> move window
C-c , -> rotate window

* Undo / Redo
C-/ -> undo
C-? -> redo
C-x u -> undo tree

* Indent
  C-x C-i -> Add tab to last mark place
  C-u 22 C-x C-i -> Add 22 blank spaces
  M-2 2 C-x C-i -> Add 22 blank spaces
  M-- 22 C-x C-i -> Remove first 22 blank space
  C-i -> indent back
  M-\ -> delete all blanks around cursor
  M-^ -> delete-indentation (join current line with above line)
  C-^ -> join current line with below line
* Transpose C-t -> transpose char
  M-t -> transpose word
  C-x C-t -> transpose above line
  M-2 M-t -> transpose word to next two words
  M-- 2 M-t -> transpose word to perv two words
* Wrap region
  in html mode, type < to wrap region with tag
  other modes, select region, type punctuation
* Abbrevs
   C-x a l -> Add local abbrev
   C-x a g -> Add global abbrev
   M-x kill-all-abbrevs -> Delete all abbrevs
   M-x edit-abbrevs -> Edit abbrevs


registe registe Registe
* Comment
M-;     -> Insert or realign comment on current line
C-u M-; -> Kill comment on current line (comment-kill).
M-j     -> Like <RET> followed by inserting and aligning a comment (comment-indent-new-line).
C-c C-c -> comment or uncomment region or current line
M-x comment-region

* Up/Down case
  M-l -> down case current word
  M-u -> up case current word
  M-c -> capitalize current word
  C-x C-l -> downcase region
  C-x C-u -> upcase region
* Block Edit
** rectangle
C-px r t -> Add to the beginning (string-rectangle)
C-x r k -> Kill the text of the region-rectangle
inline-string-rectangle
** MC
mc/edit-beginings-of-lines
mc/edit-ends-of-lines (mark lines, C-e to end, edit)
mc/mark-previous-like-this
mc/mark-all-like-this
mc/mark-next-like-this

** CUA
Ctrl+Enter -> block select
[M-a]: 将rect中的文字左对齐
[M-b]: 用空格(tabs或者spaces)替换所有rect中的字符
[M-c]: 去掉所有行左侧的空格
[M-f]: 用单个字符替换所有rect中的字符(提示输入一个字符)
[M-i]: 对每行中第一个找到的数字进行加1操作(自动把0x开头的当作十六进制数字)
[M-k]: 剪切rect
[M-l]: 把rect中的内容全部转换为小写
[M-m]: 拷贝rect
[M-n]: 用一串自增的数字替换rect中的每一行(这个功能可以用来给每行编号)
[M-o]: rect的内容右移，选中的rect用空格填充
[M-r]: 用字符串替换符满足正则表达式的字符串
[M-R]: 上下反转
[M-s]: 把rect中的每一行替换为一个字符串(提示输入)
[M-t]: 把rect整个替换为一个字符串(提示输入)
[M-u]: 把rect中的内容全部转换为大写
[M-|]: 对rect执行一个shell命令

** SetGoalColumn
   C-x C-n -> Set Goal Column
   C-n -> next line
   C-p -> prev line
   C-u C-x C-n -> Disable Goal Column
* Repeat
  C-x z -> repeat last command -> (z) repeat again
* Align
  align
  C-x \ -> align-regexp
  C-u C-x \ RET \(\s-*\) = RET 1 RET 0 RET n -> align with = for whole line

* SQL
sql-postgres
sql-mysql
p-> M-x sql-set-sqli-buffer RET *SQL* RET (No sql process started)

* Proced
m -> 'proced-mark
u -> 'proced-unmark
k -> 'proced-send-signal
* Org Mode
c-x C-o -> Open link
http://www.cnblogs.com/holbrook/archive/2012/04/12/2444992.html#sec-1-2-1
** Outline
C-c C-n/p    下/上一标题
C-c C-f/b    下/上一标题（仅限同级标题）
C-c C-u    跳到上一级标题
C-c C-j    切换到大纲浏览状态

M-RET   插入一个同级标题
M-S-RET   插入一个同级TODO 标题
M-LEFT/RIGHT    将当前标题升/降级
M-S-LEFT/RIGHT    将子树升/降级
M-S-UP/DOWN   将子树上/下移
C-c *   将本行设为标题/正文
C-c C-w   将子树或区域移动到另一标题处（跨缓冲区）
C-x n s/w   只显示当前子树/返回
C-c C-x b   在新缓冲区显示当前分支（类似C-x n s)
C-c /   只列出包含搜索结果的大纲，并高亮，支持多种搜索方式
C-c C-c   取消高亮
** Schedule Planer
 C-c C-d     (org-deadline)
 C-c C-s     (org-schedule)
 C-c C-x C-k (org-mark-entry-for-agenda-action)
 C-c / d     (org-check-deadlines)
 C-c / b     (org-check-before-date)
 C-c / a     (org-check-after-date)
** Take note with related time
 C-c C-x 0     (org-timer-start)
 C-c C-x .     (org-timer)  Insert a relative time into the buffer.
 C-c C-x -     (org-timer-item) Insert a description list item with the current relative time.
 M-<RET>     (org-insert-heading) Once the timer list is started, you can also use M-<RET> to insert new timer items.
 C-c C-x  Pause the timer, or continue it if it is already paused (org-timer-pause-or-continue).
 C-u C-c C-x  Stop the timer. After this, you can only start a new timer, not continue the old one. This command also removes the timer from the mode line.
** Attachment
C-c C-a    (org-attach)
** Links
C-c pl    保存链接
C-c C-l org-insert-link 创建或修改链接，可以引用已保存的链接
C-c C-o org-open-at-point 打开链接

C-c %   记录内部链接地址
C-c &   跳转到已记录的内部链接

# ctags -e --extra=+q -R
** Inline Image
M-x iimage-mode RET
** Font
*粗体*
/斜体/
+删除线+
_下划线_
下标： H_2 O
上标： E=mc^2
等宽字：  =git=  或者 ～git～
** Table
C-c |   创建或转换成表格

M-LEFT/RIGHT   移动列
M-UP/DOWN   移动行
M-S-LEFT/RIGHT    删除/插入列
M-S-UP/DOWN   删除/插入行
C-c -   添加水平分割线
C-c RET   添加水平分割线并跳到下一行
C-c ^   根据当前列排序，可以选择排序方式
** List
无序列表项以‘-’、‘+’或者‘*‘开头。
有序列表项以‘1.’或者‘1)’开头。
描述列表用‘::’将项和描述分开。
有序列表和无序列表都以缩进表示层级。只要对齐缩进，不管是换行还是分块都认为是处于当前列表项

M-S-RET   插入带复选框的项
M-S-UP/DOWN   移动列表项
M-LEFT/RIGHT    升/降级列表项，不包括子项
M-S-LEFT/RIGTH    升/降级列表项，包括子项
C-c C-c   改变复选框状态
C-c -   更换列表标记（循环切换）
** Tag / Propertes
C-c C-q 或直接在标题上用 C-c C-c创建标签
C-c \ 按tag搜索标题
C-c / m 搜索并按树状结构显示
C-c a m 按标签搜索多个文件（需要将文件加入全局agenda)

+     和      a+b     同时有这两个标签
-     排除    a-b     有 a 但没有 b
|     或      a|b     有 a 或者有 b
&     和      a&b     同时有 a 和 b，可以用“+”替代
** Export
C-c C-e Export
** Priorities
C-c ,    Set the priority of the current headline (org-priority). The command prompts for a priority character ‘A’, ‘B’ or ‘C’. When you press <SPC> instead, the priority cookie is removed from the headline. The priorities can also be changed “remotely” from the timeline and agenda buffer with the , command (see Agenda commands).
S-<up>   (org-priority-up)
S-<down> (org-priority-down)
** TO-DOs
   :PROPERTIES:
   :ARCHIVE_TIME: 2013-09-21 Sat 22:43
   :END:
   C-c a t     (org-todo-list) Show the global TODO list.
   C-c a T     (org-todo-list) Like `t`, but filter by keyword
   C-c / t     (org-show-todo-tree)
   S-<right> / S-<left>  Select the following/preceding TODO state
*** Progress
    Add ‘[/]’ or ‘[%]’ to the headline
** Archived
   C-c C-x a   -> 将某一个节点打上ARCHIVE标签
   C-c C-x A   -> 将当前节点归入一个名为Archive的子树中，并且这个子树是位于当前级别子树的最下方
   C-c C-x C-s -> 是把当前的节点移到archived文件中去
* drawing
1) Picture Mode -> use ditaa to convert ascii-art to image
2) Artist Mode
* Term
  <M-r> -> term-send-reverse-search-history
  <M-x> erase-buffer -> Delete buffer
  <C-j> -> toggle shell mode
* Ruby
  C-c { -> toggle { to block
* Ispell
+ C-. -> auto correct last error word
+ M-$ -> correct current word with selection
* Help
  C-c C-h -> List all key binding begging with C-c
  C-h l -> view lossage
  C-h w function	-> key binding of function
* Search
  C-s C-w -> search current word
  C-s C-y -> search yanked text
* Tips
+ C-x 5 2 -> create new top-level X windows
+ M-x command-history -> show command history
+ M-x htmlize-file/buffer -> htmlize a file
+ M-x vc-resolve-conflicts -> resolve conflicts.
  (In ediff 'n' takes you to the next change, and 'a' or 'b' lets you choose the change from buffer A or B being compared)
* Magit
  c -> commit  ( -r commit amend)
* Mu4e
  % -> mu4e-headers-mark-pattern
  ! -> mark as read
  ? -> mark as unread
  x -> mark for move
  x -> execute marked command
  S -> search
  R -> reply
  F -> forward
  C -> compose new email
